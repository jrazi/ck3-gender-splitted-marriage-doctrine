##############################
# RITUAL CULTURAL TRADITIONS #
##############################
tradition_monogamous = {
	category = ritual
	layers = {
		0 = learning
		1 = western
		4 = knight.dds
	}
	can_pick = {
		custom_tooltip = {
			text = only_one_marriage_tradition_allowed
			trigger_if = {
				limit = {
					OR = {
						NOT = {
							exists = scope:replacing
						}
						NOR = {
							scope:replacing = flag:tradition_polygamous
							scope:replacing = flag:tradition_concubines
						}
					}
				}
				NOR = {
					any_in_list = {
						list = traits
						this = flag:tradition_polygamous
					}
					any_in_list = {
						list = traits
						this = flag:tradition_concubines
					}
				}
			}
		}
	}
	can_pick_for_hybridization = {
		custom_tooltip = {
			text = only_one_marriage_tradition_allowed
			NOT = {
				# Only blocks polygamous to avoid duplicate warnings, but is blocked by concubines
				any_in_list = {
					list = traits
					this = flag:tradition_polygamous
				}
			}
		}
	}
	parameters = {
		number_of_spouses = 1
		romance_scheme_bonus_vs_spouse = yes
	}
	character_modifier = {
		spouse_opinion = 10
	}
	cost = {
		prestige = {
			add = {
				value = tradition_base_cost
				desc = BASE
				format = "BASE_VALUE_FORMAT"
			}
			if = {
				limit = {
					NOT = {
						scope:character.faith = {
							has_doctrine = doctrine_monogamy
						}
					}
				}
				add = {
					value = tradition_unfulfilled_criteria_penalty
					desc = cheaper_tradition_from_faith
				}
			}
			multiply = tradition_replacement_cost_if_relevant
		}
	}
	ai_will_do = {
		value = 0
	}
}

tradition_polygamous = {
	category = ritual
	layers = {
		0 = diplo
		1 = mena
		4 = temple.dds
	}
	can_pick = {
		custom_tooltip = {
			text = only_one_marriage_tradition_allowed
			trigger_if = {
				limit = {
					OR = {
						NOT = {
							exists = scope:replacing
						}
						NOR = {
							scope:replacing = flag:tradition_monogamous
							scope:replacing = flag:tradition_concubines
						}
					}
				}
				NOR = {
					any_in_list = {
						list = traits
						this = flag:tradition_monogamous
					}
					any_in_list = {
						list = traits
						this = flag:tradition_concubines
					}
				}
			}
		}
	}
	can_pick_for_hybridization = {
		custom_tooltip = {
			text = only_one_marriage_tradition_allowed
			NOT = {
				# Only blocks concubines to avoid duplicate warnings, but is blocked by monogamous
				any_in_list = {
					list = traits
					this = flag:tradition_concubines
				}
			}
		}
	}
	parameters = {
		number_of_spouses = 4
	}
	cost = {
		prestige = {
			add = {
				value = tradition_double_base_cost
				desc = BASE
				format = "BASE_VALUE_FORMAT"
			}
			if = {
				limit = {
					scope:character.faith = {
						AND = {
							has_doctrine = doctrine_male_monogamy
							has_doctrine = doctrine_female_monogamy
							has_doctrine = doctrine_pluralism_fundamentalist
						}
					}
				}
				add = {
					value = tradition_directly_opposed_to_faith_penalty
					desc = cheaper_tradition_from_faith
				}
			}
			else_if = {
				limit = {
					NOT = {
						scope:character.faith = {
							AND = {
								has_doctrine = doctrine_male_polygamy
								has_doctrine = doctrine_female_polygamy
							}
						}
					}
				}
				add = {
					value = tradition_unfulfilled_criteria_penalty
					desc = cheaper_tradition_from_faith
				}
			}
			multiply = tradition_replacement_cost_if_relevant
		}
	}
	ai_will_do = {
		value = 0
	}
}

tradition_concubines = {
	category = ritual
	layers = {
		0 = intrigue
		1 = indian
		4 = greeting.dds
	}
	can_pick = {
		custom_tooltip = {
			text = only_one_marriage_tradition_allowed
			trigger_if = {
				limit = {
					OR = {
						NOT = {
							exists = scope:replacing
						}
						NOR = {
							scope:replacing = flag:tradition_monogamous
							scope:replacing = flag:tradition_polygamous
						}
					}
				}
				NOR = {
					any_in_list = {
						list = traits
						this = flag:tradition_monogamous
					}
					any_in_list = {
						list = traits
						this = flag:tradition_polygamous
					}
				}
			}
		}
	}
	can_pick_for_hybridization = {
		custom_tooltip = {
			text = only_one_marriage_tradition_allowed
			NOT = {
				# Only blocks monogamous to avoid duplicate warnings, but is blocked by polygamous
				any_in_list = {
					list = traits
					this = flag:tradition_monogamous
				}
			}
		}
	}
	parameters = {
		number_of_spouses = 1
		number_of_consorts = 3
	}
	cost = {
		prestige = {
			add = {
				value = tradition_double_base_cost
				desc = BASE
				format = "BASE_VALUE_FORMAT"
			}
			if = {
				limit = {
					scope:character.faith = {
						AND = {
							has_doctrine = doctrine_male_monogamy
							has_doctrine = doctrine_female_monogamy
							has_doctrine = doctrine_pluralism_fundamentalist
						}
					}
				}
				add = {
					value = tradition_directly_opposed_to_faith_penalty
					desc = cheaper_tradition_from_faith
				}
			}
			else_if = {
				limit = {
					NOT = {
						scope:character.faith = {
							AND = {
								has_doctrine = doctrine_male_concubines
								has_doctrine = doctrine_female_concubines
							}
						}
					}
				}
				add = {
					value = tradition_unfulfilled_criteria_penalty
					desc = cheaper_tradition_from_faith
				}
			}
			multiply = tradition_replacement_cost_if_relevant
		}
	}
	ai_will_do = {
		value = 0
	}
}
